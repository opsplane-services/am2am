name: Release Workflow

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  release:
    name: Build and Release Binaries and Crate
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [x86_64-unknown-linux-gnu, x86_64-apple-darwin, x86_64-pc-windows-msvc]
        include:
          - platform: x86_64-unknown-linux-musl
            extension: ''
          - platform: x86_64-unknown-linux-gnu
            extension: ''
          - platform: x86_64-apple-darwin
            extension: ''
          - platform: x86_64-pc-windows-msvc
            extension: .exe

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Cache Cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/bin
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Install Cross (for cross-compilation)
        run: cargo install cross --locked

      - name: Build Binary
        run: |
          cross build --release --target ${{ matrix.platform }}
        env:
          RUSTFLAGS: "-C target-feature=+crt-static"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/${{ matrix.platform }}/release/am2am${{ matrix.extension }}
          asset_name: am2am-${{ matrix.platform }}${{ matrix.extension }}
          asset_content_type: application/octet-stream

      - name: Publish Crate
        if: matrix.platform == 'x86_64-unknown-linux-gnu'
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: |
          echo "[registries.crates-io]" > ~/.cargo/credentials
          echo "token = \"${CARGO_REGISTRY_TOKEN}\"" >> ~/.cargo/credentials
          cargo publish --locked --allow-dirty
